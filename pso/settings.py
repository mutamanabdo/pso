import os
import dj_database_url
from dotenv import load_dotenv
"""
Django settings for pso project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from django.contrib.postgres.search import SearchQuery as se
from pathlib import Path
from django.utils.translation import gettext_lazy as _
# from paper_admin.menu import Item
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()

se('tomato').as_sql

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "f"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = ["127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    #'whitenoise.runserver_nostatic',
    #'paper_admin',
     #'unfold',
    # 'admin_soft.apps.AdminSoftDashboardConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    # 'debug_toolbar',
    'corsheaders',
    'database',
#    'request',
    'channels',
    'rest_framework',
    'django.contrib.admindocs',
    'django_filters'
#    'import_export',
 #   'django_tui',
   # 'schema_graph'
]

MIDDLEWARE = [
    
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #"request.middleware.RequestMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    
]

CACHES= {
    # "default":{
    #     "BACKEND":
    #     'django.core.cache.backends.db.DatabaseCache',
    #     "LOCATION":"bruh"
    # }
        "default":{
        "BACKEND":
        'django.core.cache.backends.filebased.FileBasedCache',
        "LOCATION":"/var/tmp/django-cache"
    }
    #       "default":{
    #     "BACKEND":'django.core.cache.backends.locmem.LocMemCache',
    # }

}

ROOT_URLCONF = 'pso.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pso.wsgi.application'

INTERNAL_IPS=[
    "127.0.0.1"
]

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
"""
DATABASES = {
    'default': dj_database_url.config(default=os.getenv("DATABASE_URL"))
}
"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Specifies the database backend (SQLite in this case)
        'NAME': BASE_DIR / 'db.sqlite3',         # Path to the SQLite database file
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ar-ue'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = './static'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#PAPER_MENU = [
  #  Item(
    #    app="auth"
   # ),
    #Item(
     #   label=_("logs"),
        #icon="bi-clock-history",
        #perms="admin.view_logentry",
      #  children=[
       #     Item(
        #        model="admin.LogEntry"
         #   )
       # ]
#    )
#]
REQUEST_BASE_URL = '127.0.0.1:800/'



REQUEST_IGNORE_PATHS = (
    r'^admin/request',
    r'^admin/jsi18n'
)
CORS_ALLOWED_ORIGINS = [
    'http://localhost:8080',
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.sendinblue.com'  # Brevo SMTP server
EMAIL_PORT = 587  # Use 465 for SSL, 587 for TLS
EMAIL_USE_TLS = True  # Use TLS for security
EMAIL_HOST_USER ='896b18001@smtp-brevo.com'  # Your Brevo account email
EMAIL_HOST_PASSWORD = 'jyWw8p7S29UvfDq0'  # Your Brevo SMTP key
DEFAULT_FROM_EMAIL = 'bablo@pso-uxd158xf.b4a.run'  # Default sender email
